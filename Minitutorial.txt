

	AUTORES: 
		
		Joabe Ruella 
		Gabriel Couceiro

	

O algorítmo foi criado utilizando o ambiente de desenvolvimento NetBeans 8.2 (instalado no Windows 10). 
Antes de instalar o NetBeans é necessário instalar o Java Development Kit (JDK). 
Segue abaixo os dados das versões dos programas:

 - JDK:	 
	
	Java SE Development Kit 8u151

	Link para download: http://download.oracle.com/otn-pub/java/jdk/8u151-b12/e758a0de34e24606bca991d704f6dcbf/jdk-8u151-windows-x64.exe


 - NetBeans: 
	
	Product Version: NetBeans IDE 8.2 (Build 201609300101)
	Atualizações: O IDE NetBeans está atualizado para a versão NetBeans 8.2 Patch 2
	Java: 1.8.0_151; Java HotSpot(TM) 64-Bit Server VM 25.151-b12
	Runtime: Java(TM) SE Runtime Environment 1.8.0_151-b12
	System: Windows 10 version 10.0 running on amd64; Cp1252; pt_BR (nb)

	Link para download: http://download.netbeans.org/netbeans/8.2/final/bundles/netbeans-8.2-javaee-windows.exe

Após finalizar as instalaçãoes dos programas, execute o NetBeans. Quando ele abrir vá em:

	Arquivo > Abrir Projeto... 
	ou use as teclas de atalho Ctrl+Shift+O

	Vai abrir uma janela. Procure pela pasta onde está o projeto e clique em Abrir Projeto (no canto inferior direito).

No lado esquerdo da janela do NetBeans deve aparecer o Grupo de Janelas. 
Na aba Projetos deve aparecer o projeto MyWhatsApp.
Expanda as pastas:

	MyWhatsApp > Pacotes de Códigos-Fonte > pacote default

Dê um duplo clique sobre os arquivos Cliente.java e Servidor.java. Ambos irão abrir.
No código-fonte Servidor.java é necessário fazer algumas alterações relativas aos diretórios 
em que se encontram os arquivos "memoria.txt" e "logins.txt".   
Tais alterações devem ser feitas nas linhas 33, 57, 93 e 115 do código fonte.

Após fazer as atualizações dos endereços dos diretórios, clique com o botão direito do mouse sobre o arquivo Servidor.java 
e selecione a opção Executar Arquivo. 
Repita o processo para o arquivo Cliente.java.
A aplicação cliente/servidor deve iniciar a comunicação.



Os códigos fontes dos trabalhos:

//###### SERVIDOR ######


import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Servidor {

    public static void main(String[] args) throws Exception {
        ServerSocket server = new ServerSocket(3333);

        while (true) {
            Socket socket = server.accept();
            System.out.println("Servidor ON");
            InputStream input = socket.getInputStream();
            OutputStream output = socket.getOutputStream();
            BufferedReader in = new BufferedReader(new InputStreamReader(input));
            PrintStream out = new PrintStream(output);

            out.println("Digite o seu login: ");
            String log = in.readLine();
            System.out.println("Login do cliente: " + log);

            ///// Verifica se o login existe 
            BufferedReader b = new BufferedReader(new FileReader("D:\\_-_GoogleDrive\\_-_IFES\\_-_2017-2\\_-_REDES\\Trabalho 1\\Versao quase final\\MyWhatsApp - gabriel - 3011\\src\\logins.txt"));
            StringBuffer textoDoArquivo = new StringBuffer();
            String linha = null;

            int numeroDeOcorrencias = 0;
            while ((linha = b.readLine()) != null) {

                if (linha.equalsIgnoreCase(log)) {
                    numeroDeOcorrencias = 1;

                }
            }
            b.close();

            if (numeroDeOcorrencias > 0) {
                System.out.println("Login encontrado.");

                out.println("Digite 'sim' para receber msgs não lidas ou tecle Enter para enviar uma nova msgs.");
                String r = in.readLine();

                if ("sim".equals(r)) {
                    out.println("MSGS");

                    /////// Verifica se o usuário possui mensagens para receber
                    BufferedReader d = new BufferedReader(new FileReader("D:\\_-_GoogleDrive\\_-_IFES\\_-_2017-2\\_-_REDES\\Trabalho 1\\Versao quase final\\MyWhatsApp - gabriel - 3011\\src\\memoria.txt"));
                    StringBuffer textoDoArquivod = new StringBuffer();
                    String linhad = null;
                    while ((linhad = d.readLine()) != null) {
                        textoDoArquivod.append(linhad);
                        Matcher md = Pattern.compile(log).matcher(linhad);
                        while (md.find()) {

                            String[] dados = linhad.split(";");

                            for (int i = 0; i < dados.length; i++) {
                                System.out.println(dados[i]);
                            }
                            if (log.equals(dados[0])) {
                                out.println("Mensagem de " + dados[1] + ": " + dados[2]);
                            }

                            //logica para apagar a msg vem aqui
                        }
                    }
                    d.close();
                    out.println("CAMBIO");

                }

                ///// Destinatário
                out.println("Para enviar uma msg digite o nome do destinatário ou tecle Enter para sair: ");
                String dest = in.readLine();
                System.out.println("Destinatário do cliente: " + dest);

                ///// Tentar mandar para si faz desconectar!
                if (log.equals(dest)) {
                    out.println("FIM");
                }

                ///// Verifica se o destinatário existe no arquivo login.txt
                BufferedReader c = new BufferedReader(new FileReader("D:\\_-_GoogleDrive\\_-_IFES\\_-_2017-2\\_-_REDES\\Trabalho 1\\Versao quase final\\MyWhatsApp - gabriel - 3011\\src\\logins.txt"));
                StringBuffer textoDoArquivoc = new StringBuffer();
                String linhac = null;

                int numeroDeOcorrenciasc = 0;
                while ((linhac = c.readLine()) != null) {

                    if (linhac.equalsIgnoreCase(dest)) {
                        numeroDeOcorrenciasc = 1;

                    }
                }
                c.close();

                if (numeroDeOcorrenciasc > 0) {
                    System.out.println("Destinatário encontrado.");

                    ///// Mensagem 
                    out.println("Digite sua mensagem para " + dest + " :");
                    String message = in.readLine();
                    System.out.println("Mensagem de " + log + " para " + dest + " :" + message);

                    FileWriter arq = new FileWriter("D:\\_-_GoogleDrive\\_-_IFES\\_-_2017-2\\_-_REDES\\Trabalho 1\\Versao quase final\\MyWhatsApp - gabriel - 3011\\src\\memoria.txt", true);
                    PrintWriter gravarArq = new PrintWriter(arq);

                    gravarArq.println(dest + ";" + log + ";" + message);
                    gravarArq.flush();
                    out.println("FIM");
                } else {
                    System.out.println("Destinatário não encontrado.");
                    out.println("FIM");
                }
            } else {
                System.out.println("Login não encontrado.");
                out.println("FIM");
            }
        }
    }
}




//###### CLIENTE ######


import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintStream;
import java.net.Socket;
import java.util.Scanner;

public class Cliente {

    public static void main(String[] args) throws Exception {

        Socket socket = new Socket("localhost", 3333);

        System.out.println("Conexão com o servidor estabelecida...");

        InputStream input = socket.getInputStream();
        OutputStream output = socket.getOutputStream();

        BufferedReader in = new BufferedReader(new InputStreamReader(input));
        PrintStream out = new PrintStream(output);

        Scanner scanner = new Scanner(System.in);
        
        String mensagem2 = in.readLine();
            
        System.out.println("Servidor: " + mensagem2);
       
     
        while (!"FIM".equals(mensagem2)) {
            String mensagem = scanner.nextLine();

            out.println(mensagem);                 
            
            mensagem2 = in.readLine();

            if(!"MSGS".equals(mensagem2)){            
                System.out.println("Servidor: " + mensagem2);            
            }
            
            if("MSGS".equals(mensagem2)){
                while(!"CAMBIO".equals(mensagem2)){
                    mensagem2 = in.readLine();
                    if(!"CAMBIO".equals(mensagem2)){
                        System.out.println("Servidor: " + mensagem2);                        
                    }                    
                }
                mensagem2 = in.readLine();
                System.out.println("Servidor: " + mensagem2);
            }       
                    
        }

        System.out.println("Encerrando conexão.");

        in.close();

        out.close();

        socket.close();

    }

}
